plugins {
    id 'java'
    id("io.github.goooler.shadow") version "8.1.8"
}

group = 'net.toiletmc'
version = '1.3.1'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "codemc"
        url = "https://repo.codemc.org/repository/maven-public/"
    }
    maven {
        name = "placeholderapi"
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven {
        name = "CodeMC"
        url = uri("https://repo.codemc.io/repository/maven-public/")
    }
    maven { url("https://repo.lucko.me/") }
}

dependencies {
    // 不再需要 helper
    // compileOnly "me.lucko:helper:5.6.14"

    // https://github.com/ToiletMC/plugin-ToiletPAPI
    // PlaceholderAPI 已移至独立插件 ToiletPAPI，方便热加载而无需重启服务器。
    // compileOnly 'me.clip:placeholderapi:2.11.6'

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    compileOnly "io.papermc.paper:paper-api:1.21.1-R0.1-SNAPSHOT"
    compileOnly "fr.xephi:authme:5.6.0-SNAPSHOT"
    compileOnly 'me.lucko:spark-api:0.1-SNAPSHOT'
    compileOnly 'net.luckperms:api:5.4'
    compileOnly(fileTree(dir: "libs", includes: ["*.jar"]))

    // 暂时先不用这个
    // implementation "de.exlll:configlib-yaml:4.5.0"

    implementation "com.squareup.okhttp3:okhttp:4.12.0"
    implementation("de.tr7zw:item-nbt-api:2.14.1")
}

shadowJar {
    minimize()

    // 对 OkHttp 及其依赖进行 relocate 避免与其他插件冲突
    relocate 'okhttp3', 'net.toiletmc.toiletcore.libs.okhttp3'
    relocate 'okio', 'net.toiletmc.toiletcore.libs.okio'
    relocate 'kotlin', 'net.toiletmc.toiletcore.libs.kotlin'
    relocate 'de.tr7zw.changeme.nbtapi', 'net.toiletmc.toiletcore.libs.nbtapi'
    dependencies {
        exclude(dependency('org.jetbrains:annotations'))
    }

    // 不再打包和重新定位 helper，保持 jar 的干净和清爽！
    // relocate 'me.lucko.helper', 'net.toiletmc.toiletcore.libs.helper'
}


def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
